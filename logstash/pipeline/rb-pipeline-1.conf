input {
  rabbitmq {
    # whether to delete the queue when the last broker disconnects
    auto_delete => "false"

    # whether the queue survives restarts
    durable => "true"

    # exchange this configuration binds the queue to
    exchange => "rb.events"

    # whether other clients will be allowed to connect
    exclusive => "false"

    # routing key
    key => "rb.1"

    # rabbitmq server host
    host => "rabbitmq"

    # queue to consume events from
    queue => "rb.events.1"

    # rabbitmq user and password
    user => "resonance"
    password => "resonance"
  }
}

output {
#  stdout {
#    codec => rubydebug
#  }

  elasticsearch {
    # initial hosts to connect to
    hosts => ["elasticsearch:9200"]

    # whether to search for new nodes
    sniffing => "true"

    # index to be created in elasticsearch
    index => "logstash_one-%{+YYYY.MM.dd}"

    # username to connect to elastic when x-pack is installed
    user => "elastic"

    # password to connect to elastic when x-pack is installed    
    password => "changeme"
  }
}
